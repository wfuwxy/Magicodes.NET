<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ import namespace="System.IO" #>
<#@ output extension=".txt" encoding="utf-8" #>
<#@ assembly name="$(SolutionDir)\T4\Librarys\Newtonsoft.Json.dll" #>
<#@ import namespace="Newtonsoft.Json" #>
<#@ include file="$(SolutionDir)\T4\Magicodes.T4\Templates\T4Helper.tt" #>
<#@ import namespace="System.Reflection" #>
<#
    //var binDirPath=this.Host.ResolveAssemblyReference("$(TargetDir)");
    //var dir=new DirectoryInfo(binDirPath);
    //var dlls=  dir.GetFiles("*.dll");
    //foreach(FileInfo dllFile in dlls)
    //{
    //AppDomain.CurrentDomain.Load(AssemblyName.GetAssemblyName(dllFile.FullName));
    //}
 #>
<#+
    public class ODataGridHelper
    {
        public Dictionary<string, object> Params { get; set; }
        public Type T4Model { get; set; }
        public IEnumerable<T4PropertyInfo> T4PropertyInfos{ get; set; }
        public FormHelper FormHelper{ get; set; }
        public ODataGridHelper(Type t4Model)
        {
            T4Model = t4Model;
            T4PropertyInfos=T4Model.GetT4PropertyInfos();
            Params = new Dictionary<string, object>();
            Params["_param_title"] = "列表";
            Params["_param_filterTemplate"] = "contains(Name,{#txtSearch})";
            Params["_param_key"] = "Id";
            Params["_param_key_type"] = "string";
            var defaultOrderField = "CreateTime";
            if (t4Model.GetProperty("CreateTime") == null)
                defaultOrderField = "Id";
            Params["_param_orderby"] = defaultOrderField + " desc";
            Params["_param_searchplaceholder"] = "请输入...";
            Params["_tmp_TH_Default"] = "<th>{DisplayName}</th>";
            Params["_tmp_TH_Dic"] = new Dictionary<T4DataType, string>(){
                    {
                        T4DataType.DateTime,"<th><i class=\"ace-icon fa fa-clock-o bigger-110 hidden-480\"></i>{DisplayName}</th>"},
                    };
            Params["_tmp_TD_Default"] = "<td data-bind=\"text: {Name}\"></td>";
            Params["_tmp_TD_Dic"] = new Dictionary<T4DataType, string>(){
                    {
                        T4DataType.DateTime,"<td data-bind=\"text: moment({Name}).format('LLLL')\"></td>"},
                    };
            Params["_tmp_Form_Default"] =
                @"
                <div class=""form-group"">
                <label class=""control-label col-xs-12 col-sm-3 no-padding-right"" for=""{Name}"">{DisplayName}：</label>
                <div class=""col-xs-12 col-sm-9"">
                <div class=""clearfix"">
                <input type=""text"" name=""{Name}"" id=""{Name}"" data-bind=""value: {Name},attr:{required:{Required},readonly:{ReadOnly}"" placeholder=""{Description}"" class=""col-xs-12 col-sm-6"" />
                </div>
                </div>
                </div>
                <div class=""space-2""></div>";


            Params["_tmp_Form_Dic"] = new Dictionary<T4DataType, string>()
                {                       
                    {
                        T4DataType.MultilineText,
                        @"<div class=""form-group"">
                        <label class=""control-label col-xs-12 col-sm-3 no-padding-right"" for=""{Name}"">{DisplayName}：</label>
                        <div class=""col-xs-12 col-sm-9"">
                        <div class=""clearfix"">
                        <textarea  name=""{Name}"" id=""{Name}"" data-bind=""value: {Name},attr:{required:{Required},readonly:{ReadOnly}}"" placeholder=""{Description}"" class=""col-xs-12 col-sm-6 limited autosize-transition"" />
                        </div>
                        </div>
                        </div>
                        <div class=""space-2""></div>"
                        },
                    {
                        T4DataType.Text,
                        @"
                        <div class=""form-group"">
                        <label class=""control-label col-xs-12 col-sm-3 no-padding-right"" for=""{Name}"">{DisplayName}：</label>
                        <div class=""col-xs-12 col-sm-9"">
                        <div class=""clearfix"">
                        <input type=""text"" name=""{Name}"" id=""{Name}"" data-bind=""value: {Name},attr:{required:{Required},readonly:{ReadOnly}}"" placeholder=""{Description}"" class=""col-xs-12 col-sm-6"" />
                        </div>
                        </div>
                        </div>
                        <div class=""space-2""></div>"
                        },
                    {
                        T4DataType.Password,
                        @"
                        <div class=""form-group"">
                        <label class=""control-label col-xs-12 col-sm-3 no-padding-right"" for=""{Name}"">{DisplayName}：</label>
                        <div class=""col-xs-12 col-sm-9"">
                        <div class=""clearfix"">
                        <input type=""password"" name=""{Name}"" id=""{Name}"" data-bind=""value: {Name},attr:{required:{Required},readonly:{ReadOnly}}"" placeholder=""{Description}"" class=""col-xs-12 col-sm-6"" />
                        </div>
                        </div>
                        </div>
                        <div class=""space-2""></div>"
                        },
                    {
                        T4DataType.EmailAddress,
                        @"
                        <div class=""form-group"">
                        <label class=""control-label col-xs-12 col-sm-3 no-padding-right"" for=""{Name}"">{DisplayName}：</label>
                        <div class=""col-xs-12 col-sm-9"">
                        <div class=""clearfix"">
                        <input type=""email"" name=""{Name}"" id=""{Name}"" data-bind=""value: {Name},attr:{required:{Required},readonly:{ReadOnly}}"" placeholder=""{Description}"" class=""col-xs-12 col-sm-6"" />
                        </div>
                        </div>
                        </div>
                        <div class=""space-2""></div>"
                        },
                    {
                        T4DataType.PhoneNumber,
                        @"
                        <div class=""form-group"">
                        <label class=""control-label col-xs-12 col-sm-3 no-padding-right"" for=""{Name}"">{DisplayName}：</label>
                        <div class=""col-xs-12 col-sm-9"">
                        <div class=""clearfix"">
                        <input type=""text"" name=""{Name}"" id=""{Name}"" data-bind=""value: {Name},attr:{required:{Required},readonly:{ReadOnly}}"" placeholder=""{Description}"" class=""col-xs-12 col-sm-6"" />
                        </div>
                        </div>
                        </div>
                        <div class=""space-2""></div>"
                        },
                    {
                        T4DataType.Bit,
                        @"
                        <div class=""form-group"">
                        <label class=""control-label col-xs-12 col-sm-3 no-padding-right"" for=""{Name}"">{DisplayName}：</label>
                        <div class=""col-xs-12 col-sm-9"">
                        <label class=""position-relative"">
                        <input type=""checkbox"" class=""ace"" name=""{Name}"" id=""{Name}"" data-bind=""checked: {Name},attr:{required:{Required},readonly:{ReadOnly}}"" />
                        <span class=""lbl""></span>
                        </label>
                        </div>
                        </div>
                        <div class=""space-2""></div>"
                        },
                    {
                        T4DataType.Select,
                        @"
                        <div class=""form-group"">
                        <label class=""control-label col-xs-12 col-sm-3 no-padding-right"" for=""{Name}"">{DisplayName}：</label>
                        <div class=""col-xs-12 col-sm-9"">
                        <div class=""clearfix"">
                        <select class=""col-xs-12 col-sm-6""  name=""{Name}"" id=""{Name}"" data-bind=""value: {Name},attr:{required:{Required},readonly:{ReadOnly}}"" ></select>
                        </div>
                        </div>
                        </div>
                        <div class=""space-2""></div>"
                        },
                    {
                        T4DataType.Html,
                        @"
                        <div class=""form-group"">
                        <label class=""col-xs-12 col-sm-11"" for=""{Name}"">{DisplayName}：</label>
                        <div class=""col-xs-12 col-sm-11"">
                        <div class=""clearfix"">
                        <script name=""{Name}"" id=""{Name}"" type=""text/plain"" class=""col-xs-12 col-sm-11"" style=""height:300px;"" data-bind=""htmlValue: {Name}"">
                        </script>
                        </div>
                        </div>
                        </div>
                        <div class=""space-2""></div>"
                        }
                    };
            this.FormHelper=new FormHelper(this.T4Model,this.GetValue<Dictionary<T4DataType, string>>("_tmp_Form_Dic"),this.GetValue("_tmp_Form_Default"),null);
        }
        public string GetValue(string paramsName)
        {
            return Params.ContainsKey(paramsName) ? (Params[paramsName] ?? string.Empty).ToString() : string.Empty;
        }
        public T GetValue<T>(string paramsName)
        {
            if (!Params.ContainsKey(paramsName))
                return default(T);
            return (T)Params[paramsName];
        }
        public string CodeGenerate(string dicName, string defaultName)
        {
            return this.T4Model.T4Html(
                this.GetValue<Dictionary<T4DataType, string>>(dicName),
                this.GetValue(defaultName)
                );
        }
        public string CodeGenerate(string dicName, string defaultName,string tag)
        {
            return this.T4Model.T4Html(
                this.GetValue<Dictionary<T4DataType, string>>(dicName),
                this.GetValue(defaultName),
                tag
                );
        }
        
    }
 #>
